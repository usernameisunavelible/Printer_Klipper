[gcode_macro START_PRINT]
gcode:
  {% set BED_TEMP = params.BED|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER|float %}
  M140 S{BED_TEMP} # Start bed heating
  M104 S{EXTRUDER_TEMP} # Set nozzle temperature
  M190 S{BED_TEMP}  # Wait for bed to reach temperature
  M109 S{EXTRUDER_TEMP}  # Set and wait for nozzle to reach temperature
  G28 # Home the printer 
  G92 E0 # Reset E steps
  #BES_MESH
  BED_MESH_PROFILE LOAD=default # Loads "probe hot1" bed mesh
  G1 Z10 F3000 
  G1 X1 Y20 Z0.3 F5000 #purge line
  G1 X1 Y200 Z0.3 F1500 E15
  G1 X1.4 Y200 Z0.3 F5000
  G1 X1.4 Y20 Z0.3 F1500 E30
  G92 E0
  G1 Z3 F3000

[gcode_macro END_PRINT]
gcode:
  G91
  G1 E-2 F3000
  G1 Z5 E-2 F2500
  G90 
  G1 X0 Y210 F3000
  M107
  M104 S0
  M140 S0
  M84

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                   ; z hop amount

    {% if printer['pause_resume'].is_paused|int == 0 %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro

        #SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0                                  ; disable filament sensor
        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume
        BASE_PAUSE                                                                           ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
            G91                                                                              ; relative positioning
            G1 Z{z} F900                                                                     ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  ; absolute positioning
        G1 X{0} Y{170} F6000   ; park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error)
        M104 S0                                                                              ; turn off hotend
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
    {% endif %}

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(5)|int %}                                          ; hotend prime amount (in mm)

    {% if printer['pause_resume'].is_paused|int == 1 %}
        #SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1                          ; enable filament sensor
        #INITIAL_RGB                                                                    ; reset LCD color
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        G1 Z{zhop * -1} E{e} F900 
        #{% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
        #    G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
        #{% else %}
        #    G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        #{% endif %}
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
        BASE_RESUME                                                                  ; resume print
    {% endif %}

[gcode_macro LEDOFF]
gcode:  SET_PIN PIN=LED VALUE=0

[gcode_macro LEDON]
gcode:  SET_PIN PIN=LED VALUE=1

[gcode_macro PID_EXTRUDER] description: PID Tune for the Extruder gcode:
gcode:
  {% set TARGET_TEMP = params.TARGET_TEMP|default(210)|float %}
  PID_CALIBRATE HEATER=extruder TARGET=210
  TURN_OFF_HEATERS SAVE_CONFIG

[gcode_macro PID_BED] description: PID Tune for the Bed gcode:
gcode:
  {% set TARGET_TEMP = params.TARGET_TEMP|default(60)|float %}
  PID_CALIBRATE HEATER=heater_bed TARGET=60
  TURN_OFF_HEATERS SAVE_CONFIG